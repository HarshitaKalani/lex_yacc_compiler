Terminals unused in grammar

    AND
    OR


State 9 conflicts: 1 shift/reduce
State 41 conflicts: 10 shift/reduce
State 79 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers
    3        | INCLUDE

    4 main: datatype ID

    5 datatype: INT
    6         | FLOAT
    7         | CHAR
    8         | VOID

    9 body: FOR '(' statement ';' condition ';' statement ')' '{' body '}'
   10     | IF '(' condition ')' '{' body '}' else
   11     | statement ';'
   12     | body body
   13     | PRINTFF '(' STR ')' ';'
   14     | SCANFF '(' STR ',' '&' ID ')' ';'

   15 else: ELSE '{' body '}'
   16     | ε

   17 condition: value relop value
   18          | TRUE
   19          | FALSE

   20 statement: datatype ID init
   21          | ID '=' expression
   22          | ID relop expression
   23          | ID UNARY
   24          | UNARY ID

   25 init: '=' value
   26     | ε

   27 expression: expression arithmetic expression
   28           | value

   29 arithmetic: ADD
   30           | SUBTRACT
   31           | MULTIPLY
   32           | DIVIDE

   33 relop: LT
   34      | GT
   35      | LE
   36      | GE
   37      | EQ
   38      | NE

   39 value: NUMBER
   40      | FLOAT_NUM
   41      | CHARACTER
   42      | ID

   43 return: RETURN value ';'
   44       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 14
    '(' (40) 1 9 10 13 14
    ')' (41) 1 9 10 13 14
    ',' (44) 14
    ';' (59) 9 11 13 14 43
    '=' (61) 21 25
    '{' (123) 1 9 10 15
    '}' (125) 1 9 10 15
    error (256)
    VOID (258) 8
    CHARACTER (259) 41
    PRINTFF (260) 13
    SCANFF (261) 14
    INT (262) 5
    FLOAT (263) 6
    CHAR (264) 7
    FOR (265) 9
    IF (266) 10
    ELSE (267) 15
    TRUE (268) 18
    FALSE (269) 19
    NUMBER (270) 39
    FLOAT_NUM (271) 40
    ID (272) 4 14 20 21 22 23 24 42
    LE (273) 35
    GE (274) 36
    EQ (275) 37
    NE (276) 38
    GT (277) 34
    LT (278) 33
    AND (279)
    OR (280)
    STR (281) 13 14
    ADD (282) 29
    MULTIPLY (283) 31
    DIVIDE (284) 32
    SUBTRACT (285) 30
    UNARY (286) 23 24
    INCLUDE (287) 3
    RETURN (288) 43


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    headers (44)
        on left: 2 3
        on right: 1 2
    main (45)
        on left: 4
        on right: 1
    datatype (46)
        on left: 5 6 7 8
        on right: 4 20
    body (47)
        on left: 9 10 11 12 13 14
        on right: 1 9 10 12 15
    else (48)
        on left: 15 16
        on right: 10
    condition (49)
        on left: 17 18 19
        on right: 9 10
    statement (50)
        on left: 20 21 22 23 24
        on right: 9 11
    init (51)
        on left: 25 26
        on right: 20
    expression (52)
        on left: 27 28
        on right: 21 22 27
    arithmetic (53)
        on left: 29 30 31 32
        on right: 27
    relop (54)
        on left: 33 34 35 36 37 38
        on right: 17 22
    value (55)
        on left: 39 40 41 42
        on right: 17 25 28 43
    return (56)
        on left: 43 44
        on right: 1


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • main '(' ')' '{' body return '}'
    2 headers: headers • headers

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    INCLUDE  shift, and go to state 1

    headers   go to state 9
    main      go to state 10
    datatype  go to state 11


State 4

    0 $accept: program $end •

    $default  accept


State 5

    8 datatype: VOID •

    $default  reduce using rule 8 (datatype)


State 6

    5 datatype: INT •

    $default  reduce using rule 5 (datatype)


State 7

    6 datatype: FLOAT •

    $default  reduce using rule 6 (datatype)


State 8

    7 datatype: CHAR •

    $default  reduce using rule 7 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers main • '(' ')' '{' body return '}'

    '('  shift, and go to state 12


State 11

    4 main: datatype • ID

    ID  shift, and go to state 13


State 12

    1 program: headers main '(' • ')' '{' body return '}'

    ')'  shift, and go to state 14


State 13

    4 main: datatype ID •

    $default  reduce using rule 4 (main)


State 14

    1 program: headers main '(' ')' • '{' body return '}'

    '{'  shift, and go to state 15


State 15

    1 program: headers main '(' ')' '{' • body return '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 23
    statement  go to state 24


State 16

   13 body: PRINTFF • '(' STR ')' ';'

    '('  shift, and go to state 25


State 17

   14 body: SCANFF • '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 26


State 18

    9 body: FOR • '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 27


State 19

   10 body: IF • '(' condition ')' '{' body '}' else

    '('  shift, and go to state 28


State 20

   21 statement: ID • '=' expression
   22          | ID • relop expression
   23          | ID • UNARY

    LE     shift, and go to state 29
    GE     shift, and go to state 30
    EQ     shift, and go to state 31
    NE     shift, and go to state 32
    GT     shift, and go to state 33
    LT     shift, and go to state 34
    UNARY  shift, and go to state 35
    '='    shift, and go to state 36

    relop  go to state 37


State 21

   24 statement: UNARY • ID

    ID  shift, and go to state 38


State 22

   20 statement: datatype • ID init

    ID  shift, and go to state 39


State 23

    1 program: headers main '(' ')' '{' body • return '}'
   12 body: body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    RETURN   shift, and go to state 40

    $default  reduce using rule 44 (return)

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24
    return     go to state 42


State 24

   11 body: statement • ';'

    ';'  shift, and go to state 43


State 25

   13 body: PRINTFF '(' • STR ')' ';'

    STR  shift, and go to state 44


State 26

   14 body: SCANFF '(' • STR ',' '&' ID ')' ';'

    STR  shift, and go to state 45


State 27

    9 body: FOR '(' • statement ';' condition ';' statement ')' '{' body '}'

    VOID   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 46


State 28

   10 body: IF '(' • condition ')' '{' body '}' else

    CHARACTER  shift, and go to state 47
    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    condition  go to state 53
    value      go to state 54


State 29

   35 relop: LE •

    $default  reduce using rule 35 (relop)


State 30

   36 relop: GE •

    $default  reduce using rule 36 (relop)


State 31

   37 relop: EQ •

    $default  reduce using rule 37 (relop)


State 32

   38 relop: NE •

    $default  reduce using rule 38 (relop)


State 33

   34 relop: GT •

    $default  reduce using rule 34 (relop)


State 34

   33 relop: LT •

    $default  reduce using rule 33 (relop)


State 35

   23 statement: ID UNARY •

    $default  reduce using rule 23 (statement)


State 36

   21 statement: ID '=' • expression

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    expression  go to state 55
    value       go to state 56


State 37

   22 statement: ID relop • expression

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    expression  go to state 57
    value       go to state 56


State 38

   24 statement: UNARY ID •

    $default  reduce using rule 24 (statement)


State 39

   20 statement: datatype ID • init

    '='  shift, and go to state 58

    $default  reduce using rule 26 (init)

    init  go to state 59


State 40

   43 return: RETURN • value ';'

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 60


State 41

   12 body: body • body
   12     | body body •

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    VOID      [reduce using rule 12 (body)]
    PRINTFF   [reduce using rule 12 (body)]
    SCANFF    [reduce using rule 12 (body)]
    INT       [reduce using rule 12 (body)]
    FLOAT     [reduce using rule 12 (body)]
    CHAR      [reduce using rule 12 (body)]
    FOR       [reduce using rule 12 (body)]
    IF        [reduce using rule 12 (body)]
    ID        [reduce using rule 12 (body)]
    UNARY     [reduce using rule 12 (body)]
    $default  reduce using rule 12 (body)

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 42

    1 program: headers main '(' ')' '{' body return • '}'

    '}'  shift, and go to state 61


State 43

   11 body: statement ';' •

    $default  reduce using rule 11 (body)


State 44

   13 body: PRINTFF '(' STR • ')' ';'

    ')'  shift, and go to state 62


State 45

   14 body: SCANFF '(' STR • ',' '&' ID ')' ';'

    ','  shift, and go to state 63


State 46

    9 body: FOR '(' statement • ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 64


State 47

   41 value: CHARACTER •

    $default  reduce using rule 41 (value)


State 48

   18 condition: TRUE •

    $default  reduce using rule 18 (condition)


State 49

   19 condition: FALSE •

    $default  reduce using rule 19 (condition)


State 50

   39 value: NUMBER •

    $default  reduce using rule 39 (value)


State 51

   40 value: FLOAT_NUM •

    $default  reduce using rule 40 (value)


State 52

   42 value: ID •

    $default  reduce using rule 42 (value)


State 53

   10 body: IF '(' condition • ')' '{' body '}' else

    ')'  shift, and go to state 65


State 54

   17 condition: value • relop value

    LE  shift, and go to state 29
    GE  shift, and go to state 30
    EQ  shift, and go to state 31
    NE  shift, and go to state 32
    GT  shift, and go to state 33
    LT  shift, and go to state 34

    relop  go to state 66


State 55

   21 statement: ID '=' expression •
   27 expression: expression • arithmetic expression

    ADD       shift, and go to state 67
    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69
    SUBTRACT  shift, and go to state 70

    $default  reduce using rule 21 (statement)

    arithmetic  go to state 71


State 56

   28 expression: value •

    $default  reduce using rule 28 (expression)


State 57

   22 statement: ID relop expression •
   27 expression: expression • arithmetic expression

    ADD       shift, and go to state 67
    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69
    SUBTRACT  shift, and go to state 70

    $default  reduce using rule 22 (statement)

    arithmetic  go to state 71


State 58

   25 init: '=' • value

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 72


State 59

   20 statement: datatype ID init •

    $default  reduce using rule 20 (statement)


State 60

   43 return: RETURN value • ';'

    ';'  shift, and go to state 73


State 61

    1 program: headers main '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 62

   13 body: PRINTFF '(' STR ')' • ';'

    ';'  shift, and go to state 74


State 63

   14 body: SCANFF '(' STR ',' • '&' ID ')' ';'

    '&'  shift, and go to state 75


State 64

    9 body: FOR '(' statement ';' • condition ';' statement ')' '{' body '}'

    CHARACTER  shift, and go to state 47
    TRUE       shift, and go to state 48
    FALSE      shift, and go to state 49
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    condition  go to state 76
    value      go to state 54


State 65

   10 body: IF '(' condition ')' • '{' body '}' else

    '{'  shift, and go to state 77


State 66

   17 condition: value relop • value

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    value  go to state 78


State 67

   29 arithmetic: ADD •

    $default  reduce using rule 29 (arithmetic)


State 68

   31 arithmetic: MULTIPLY •

    $default  reduce using rule 31 (arithmetic)


State 69

   32 arithmetic: DIVIDE •

    $default  reduce using rule 32 (arithmetic)


State 70

   30 arithmetic: SUBTRACT •

    $default  reduce using rule 30 (arithmetic)


State 71

   27 expression: expression arithmetic • expression

    CHARACTER  shift, and go to state 47
    NUMBER     shift, and go to state 50
    FLOAT_NUM  shift, and go to state 51
    ID         shift, and go to state 52

    expression  go to state 79
    value       go to state 56


State 72

   25 init: '=' value •

    $default  reduce using rule 25 (init)


State 73

   43 return: RETURN value ';' •

    $default  reduce using rule 43 (return)


State 74

   13 body: PRINTFF '(' STR ')' ';' •

    $default  reduce using rule 13 (body)


State 75

   14 body: SCANFF '(' STR ',' '&' • ID ')' ';'

    ID  shift, and go to state 80


State 76

    9 body: FOR '(' statement ';' condition • ';' statement ')' '{' body '}'

    ';'  shift, and go to state 81


State 77

   10 body: IF '(' condition ')' '{' • body '}' else

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 82
    statement  go to state 24


State 78

   17 condition: value relop value •

    $default  reduce using rule 17 (condition)


State 79

   27 expression: expression • arithmetic expression
   27           | expression arithmetic expression •

    ADD       shift, and go to state 67
    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69
    SUBTRACT  shift, and go to state 70

    ADD       [reduce using rule 27 (expression)]
    MULTIPLY  [reduce using rule 27 (expression)]
    DIVIDE    [reduce using rule 27 (expression)]
    SUBTRACT  [reduce using rule 27 (expression)]
    $default  reduce using rule 27 (expression)

    arithmetic  go to state 71


State 80

   14 body: SCANFF '(' STR ',' '&' ID • ')' ';'

    ')'  shift, and go to state 83


State 81

    9 body: FOR '(' statement ';' condition ';' • statement ')' '{' body '}'

    VOID   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 84


State 82

   10 body: IF '(' condition ')' '{' body • '}' else
   12     | body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 85

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 83

   14 body: SCANFF '(' STR ',' '&' ID ')' • ';'

    ';'  shift, and go to state 86


State 84

    9 body: FOR '(' statement ';' condition ';' statement • ')' '{' body '}'

    ')'  shift, and go to state 87


State 85

   10 body: IF '(' condition ')' '{' body '}' • else

    ELSE  shift, and go to state 88

    $default  reduce using rule 16 (else)

    else  go to state 89


State 86

   14 body: SCANFF '(' STR ',' '&' ID ')' ';' •

    $default  reduce using rule 14 (body)


State 87

    9 body: FOR '(' statement ';' condition ';' statement ')' • '{' body '}'

    '{'  shift, and go to state 90


State 88

   15 else: ELSE • '{' body '}'

    '{'  shift, and go to state 91


State 89

   10 body: IF '(' condition ')' '{' body '}' else •

    $default  reduce using rule 10 (body)


State 90

    9 body: FOR '(' statement ';' condition ';' statement ')' '{' • body '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 92
    statement  go to state 24


State 91

   15 else: ELSE '{' • body '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 93
    statement  go to state 24


State 92

    9 body: FOR '(' statement ';' condition ';' statement ')' '{' body • '}'
   12     | body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 94

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 93

   12 body: body • body
   15 else: ELSE '{' body • '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 95

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 94

    9 body: FOR '(' statement ';' condition ';' statement ')' '{' body '}' •

    $default  reduce using rule 9 (body)


State 95

   15 else: ELSE '{' body '}' •

    $default  reduce using rule 15 (else)
