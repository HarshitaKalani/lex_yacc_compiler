Terminals unused in grammar

    AND
    OR


State 9 conflicts: 1 shift/reduce
State 41 conflicts: 10 shift/reduce
State 78 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers
    3        | INCLUDE

    4 main: datatype ID

    5 datatype: INT
    6         | FLOAT
    7         | CHAR
    8         | VOID

    9 $@1: ε

   10 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body '}'

   11 $@2: ε

   12 body: IF $@2 '(' condition ')' '{' body '}' else
   13     | statement ';'
   14     | body body

   15 $@3: ε

   16 body: PRINTFF $@3 '(' STR ')' ';'

   17 $@4: ε

   18 body: SCANFF $@4 '(' STR ',' '&' ID ')' ';'

   19 $@5: ε

   20 else: ELSE $@5 '{' body '}'
   21     | ε

   22 condition: value relop value
   23          | TRUE
   24          | FALSE
   25          | ε

   26 $@6: ε

   27 statement: datatype ID $@6 init
   28          | ID '=' expression
   29          | ID relop expression
   30          | ID UNARY
   31          | UNARY ID

   32 init: '=' value
   33     | ε

   34 expression: expression arithmetic expression
   35           | value

   36 arithmetic: ADD
   37           | SUBTRACT
   38           | MULTIPLY
   39           | DIVIDE

   40 relop: LT
   41      | GT
   42      | LE
   43      | GE
   44      | EQ
   45      | NE

   46 value: NUMBER
   47      | FLOAT_NUM
   48      | CHARACTER
   49      | ID

   50 $@7: ε

   51 return: RETURN $@7 value ';'
   52       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 18
    '(' (40) 1 10 12 16 18
    ')' (41) 1 10 12 16 18
    ',' (44) 18
    ';' (59) 10 13 16 18 51
    '=' (61) 28 32
    '{' (123) 1 10 12 20
    '}' (125) 1 10 12 20
    error (256)
    VOID (258) 8
    CHARACTER (259) 48
    PRINTFF (260) 16
    SCANFF (261) 18
    INT (262) 5
    FLOAT (263) 6
    CHAR (264) 7
    FOR (265) 10
    IF (266) 12
    ELSE (267) 20
    TRUE (268) 23
    FALSE (269) 24
    NUMBER (270) 46
    FLOAT_NUM (271) 47
    ID (272) 4 18 27 28 29 30 31 49
    LE (273) 42
    GE (274) 43
    EQ (275) 44
    NE (276) 45
    GT (277) 41
    LT (278) 40
    AND (279)
    OR (280)
    STR (281) 16 18
    ADD (282) 36
    MULTIPLY (283) 38
    DIVIDE (284) 39
    SUBTRACT (285) 37
    UNARY (286) 30 31
    INCLUDE (287) 3
    RETURN (288) 51


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    headers (44)
        on left: 2 3
        on right: 1 2
    main (45)
        on left: 4
        on right: 1
    datatype (46)
        on left: 5 6 7 8
        on right: 4 27
    body (47)
        on left: 10 12 13 14 16 18
        on right: 1 10 12 14 20
    $@1 (48)
        on left: 9
        on right: 10
    $@2 (49)
        on left: 11
        on right: 12
    $@3 (50)
        on left: 15
        on right: 16
    $@4 (51)
        on left: 17
        on right: 18
    else (52)
        on left: 20 21
        on right: 12
    $@5 (53)
        on left: 19
        on right: 20
    condition (54)
        on left: 22 23 24 25
        on right: 10 12
    statement (55)
        on left: 27 28 29 30 31
        on right: 10 13
    $@6 (56)
        on left: 26
        on right: 27
    init (57)
        on left: 32 33
        on right: 27
    expression (58)
        on left: 34 35
        on right: 28 29 34
    arithmetic (59)
        on left: 36 37 38 39
        on right: 34
    relop (60)
        on left: 40 41 42 43 44 45
        on right: 22 29
    value (61)
        on left: 46 47 48 49
        on right: 22 32 35 51
    return (62)
        on left: 51 52
        on right: 1
    $@7 (63)
        on left: 50
        on right: 51


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • main '(' ')' '{' body return '}'
    2 headers: headers • headers

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    INCLUDE  shift, and go to state 1

    headers   go to state 9
    main      go to state 10
    datatype  go to state 11


State 4

    0 $accept: program $end •

    $default  accept


State 5

    8 datatype: VOID •

    $default  reduce using rule 8 (datatype)


State 6

    5 datatype: INT •

    $default  reduce using rule 5 (datatype)


State 7

    6 datatype: FLOAT •

    $default  reduce using rule 6 (datatype)


State 8

    7 datatype: CHAR •

    $default  reduce using rule 7 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers main • '(' ')' '{' body return '}'

    '('  shift, and go to state 12


State 11

    4 main: datatype • ID

    ID  shift, and go to state 13


State 12

    1 program: headers main '(' • ')' '{' body return '}'

    ')'  shift, and go to state 14


State 13

    4 main: datatype ID •

    $default  reduce using rule 4 (main)


State 14

    1 program: headers main '(' ')' • '{' body return '}'

    '{'  shift, and go to state 15


State 15

    1 program: headers main '(' ')' '{' • body return '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 23
    statement  go to state 24


State 16

   16 body: PRINTFF • $@3 '(' STR ')' ';'

    $default  reduce using rule 15 ($@3)

    $@3  go to state 25


State 17

   18 body: SCANFF • $@4 '(' STR ',' '&' ID ')' ';'

    $default  reduce using rule 17 ($@4)

    $@4  go to state 26


State 18

   10 body: FOR • $@1 '(' statement ';' condition ';' statement ')' '{' body '}'

    $default  reduce using rule 9 ($@1)

    $@1  go to state 27


State 19

   12 body: IF • $@2 '(' condition ')' '{' body '}' else

    $default  reduce using rule 11 ($@2)

    $@2  go to state 28


State 20

   28 statement: ID • '=' expression
   29          | ID • relop expression
   30          | ID • UNARY

    LE     shift, and go to state 29
    GE     shift, and go to state 30
    EQ     shift, and go to state 31
    NE     shift, and go to state 32
    GT     shift, and go to state 33
    LT     shift, and go to state 34
    UNARY  shift, and go to state 35
    '='    shift, and go to state 36

    relop  go to state 37


State 21

   31 statement: UNARY • ID

    ID  shift, and go to state 38


State 22

   27 statement: datatype • ID $@6 init

    ID  shift, and go to state 39


State 23

    1 program: headers main '(' ')' '{' body • return '}'
   14 body: body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    RETURN   shift, and go to state 40

    $default  reduce using rule 52 (return)

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24
    return     go to state 42


State 24

   13 body: statement • ';'

    ';'  shift, and go to state 43


State 25

   16 body: PRINTFF $@3 • '(' STR ')' ';'

    '('  shift, and go to state 44


State 26

   18 body: SCANFF $@4 • '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 45


State 27

   10 body: FOR $@1 • '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 46


State 28

   12 body: IF $@2 • '(' condition ')' '{' body '}' else

    '('  shift, and go to state 47


State 29

   42 relop: LE •

    $default  reduce using rule 42 (relop)


State 30

   43 relop: GE •

    $default  reduce using rule 43 (relop)


State 31

   44 relop: EQ •

    $default  reduce using rule 44 (relop)


State 32

   45 relop: NE •

    $default  reduce using rule 45 (relop)


State 33

   41 relop: GT •

    $default  reduce using rule 41 (relop)


State 34

   40 relop: LT •

    $default  reduce using rule 40 (relop)


State 35

   30 statement: ID UNARY •

    $default  reduce using rule 30 (statement)


State 36

   28 statement: ID '=' • expression

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    expression  go to state 52
    value       go to state 53


State 37

   29 statement: ID relop • expression

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    expression  go to state 54
    value       go to state 53


State 38

   31 statement: UNARY ID •

    $default  reduce using rule 31 (statement)


State 39

   27 statement: datatype ID • $@6 init

    $default  reduce using rule 26 ($@6)

    $@6  go to state 55


State 40

   51 return: RETURN • $@7 value ';'

    $default  reduce using rule 50 ($@7)

    $@7  go to state 56


State 41

   14 body: body • body
   14     | body body •

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    VOID      [reduce using rule 14 (body)]
    PRINTFF   [reduce using rule 14 (body)]
    SCANFF    [reduce using rule 14 (body)]
    INT       [reduce using rule 14 (body)]
    FLOAT     [reduce using rule 14 (body)]
    CHAR      [reduce using rule 14 (body)]
    FOR       [reduce using rule 14 (body)]
    IF        [reduce using rule 14 (body)]
    ID        [reduce using rule 14 (body)]
    UNARY     [reduce using rule 14 (body)]
    $default  reduce using rule 14 (body)

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 42

    1 program: headers main '(' ')' '{' body return • '}'

    '}'  shift, and go to state 57


State 43

   13 body: statement ';' •

    $default  reduce using rule 13 (body)


State 44

   16 body: PRINTFF $@3 '(' • STR ')' ';'

    STR  shift, and go to state 58


State 45

   18 body: SCANFF $@4 '(' • STR ',' '&' ID ')' ';'

    STR  shift, and go to state 59


State 46

   10 body: FOR $@1 '(' • statement ';' condition ';' statement ')' '{' body '}'

    VOID   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 60


State 47

   12 body: IF $@2 '(' • condition ')' '{' body '}' else

    CHARACTER  shift, and go to state 48
    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    $default  reduce using rule 25 (condition)

    condition  go to state 63
    value      go to state 64


State 48

   48 value: CHARACTER •

    $default  reduce using rule 48 (value)


State 49

   46 value: NUMBER •

    $default  reduce using rule 46 (value)


State 50

   47 value: FLOAT_NUM •

    $default  reduce using rule 47 (value)


State 51

   49 value: ID •

    $default  reduce using rule 49 (value)


State 52

   28 statement: ID '=' expression •
   34 expression: expression • arithmetic expression

    ADD       shift, and go to state 65
    MULTIPLY  shift, and go to state 66
    DIVIDE    shift, and go to state 67
    SUBTRACT  shift, and go to state 68

    $default  reduce using rule 28 (statement)

    arithmetic  go to state 69


State 53

   35 expression: value •

    $default  reduce using rule 35 (expression)


State 54

   29 statement: ID relop expression •
   34 expression: expression • arithmetic expression

    ADD       shift, and go to state 65
    MULTIPLY  shift, and go to state 66
    DIVIDE    shift, and go to state 67
    SUBTRACT  shift, and go to state 68

    $default  reduce using rule 29 (statement)

    arithmetic  go to state 69


State 55

   27 statement: datatype ID $@6 • init

    '='  shift, and go to state 70

    $default  reduce using rule 33 (init)

    init  go to state 71


State 56

   51 return: RETURN $@7 • value ';'

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    value  go to state 72


State 57

    1 program: headers main '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 58

   16 body: PRINTFF $@3 '(' STR • ')' ';'

    ')'  shift, and go to state 73


State 59

   18 body: SCANFF $@4 '(' STR • ',' '&' ID ')' ';'

    ','  shift, and go to state 74


State 60

   10 body: FOR $@1 '(' statement • ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 75


State 61

   23 condition: TRUE •

    $default  reduce using rule 23 (condition)


State 62

   24 condition: FALSE •

    $default  reduce using rule 24 (condition)


State 63

   12 body: IF $@2 '(' condition • ')' '{' body '}' else

    ')'  shift, and go to state 76


State 64

   22 condition: value • relop value

    LE  shift, and go to state 29
    GE  shift, and go to state 30
    EQ  shift, and go to state 31
    NE  shift, and go to state 32
    GT  shift, and go to state 33
    LT  shift, and go to state 34

    relop  go to state 77


State 65

   36 arithmetic: ADD •

    $default  reduce using rule 36 (arithmetic)


State 66

   38 arithmetic: MULTIPLY •

    $default  reduce using rule 38 (arithmetic)


State 67

   39 arithmetic: DIVIDE •

    $default  reduce using rule 39 (arithmetic)


State 68

   37 arithmetic: SUBTRACT •

    $default  reduce using rule 37 (arithmetic)


State 69

   34 expression: expression arithmetic • expression

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    expression  go to state 78
    value       go to state 53


State 70

   32 init: '=' • value

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    value  go to state 79


State 71

   27 statement: datatype ID $@6 init •

    $default  reduce using rule 27 (statement)


State 72

   51 return: RETURN $@7 value • ';'

    ';'  shift, and go to state 80


State 73

   16 body: PRINTFF $@3 '(' STR ')' • ';'

    ';'  shift, and go to state 81


State 74

   18 body: SCANFF $@4 '(' STR ',' • '&' ID ')' ';'

    '&'  shift, and go to state 82


State 75

   10 body: FOR $@1 '(' statement ';' • condition ';' statement ')' '{' body '}'

    CHARACTER  shift, and go to state 48
    TRUE       shift, and go to state 61
    FALSE      shift, and go to state 62
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    $default  reduce using rule 25 (condition)

    condition  go to state 83
    value      go to state 64


State 76

   12 body: IF $@2 '(' condition ')' • '{' body '}' else

    '{'  shift, and go to state 84


State 77

   22 condition: value relop • value

    CHARACTER  shift, and go to state 48
    NUMBER     shift, and go to state 49
    FLOAT_NUM  shift, and go to state 50
    ID         shift, and go to state 51

    value  go to state 85


State 78

   34 expression: expression • arithmetic expression
   34           | expression arithmetic expression •

    ADD       shift, and go to state 65
    MULTIPLY  shift, and go to state 66
    DIVIDE    shift, and go to state 67
    SUBTRACT  shift, and go to state 68

    ADD       [reduce using rule 34 (expression)]
    MULTIPLY  [reduce using rule 34 (expression)]
    DIVIDE    [reduce using rule 34 (expression)]
    SUBTRACT  [reduce using rule 34 (expression)]
    $default  reduce using rule 34 (expression)

    arithmetic  go to state 69


State 79

   32 init: '=' value •

    $default  reduce using rule 32 (init)


State 80

   51 return: RETURN $@7 value ';' •

    $default  reduce using rule 51 (return)


State 81

   16 body: PRINTFF $@3 '(' STR ')' ';' •

    $default  reduce using rule 16 (body)


State 82

   18 body: SCANFF $@4 '(' STR ',' '&' • ID ')' ';'

    ID  shift, and go to state 86


State 83

   10 body: FOR $@1 '(' statement ';' condition • ';' statement ')' '{' body '}'

    ';'  shift, and go to state 87


State 84

   12 body: IF $@2 '(' condition ')' '{' • body '}' else

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 88
    statement  go to state 24


State 85

   22 condition: value relop value •

    $default  reduce using rule 22 (condition)


State 86

   18 body: SCANFF $@4 '(' STR ',' '&' ID • ')' ';'

    ')'  shift, and go to state 89


State 87

   10 body: FOR $@1 '(' statement ';' condition ';' • statement ')' '{' body '}'

    VOID   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 90


State 88

   12 body: IF $@2 '(' condition ')' '{' body • '}' else
   14     | body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 91

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 89

   18 body: SCANFF $@4 '(' STR ',' '&' ID ')' • ';'

    ';'  shift, and go to state 92


State 90

   10 body: FOR $@1 '(' statement ';' condition ';' statement • ')' '{' body '}'

    ')'  shift, and go to state 93


State 91

   12 body: IF $@2 '(' condition ')' '{' body '}' • else

    ELSE  shift, and go to state 94

    $default  reduce using rule 21 (else)

    else  go to state 95


State 92

   18 body: SCANFF $@4 '(' STR ',' '&' ID ')' ';' •

    $default  reduce using rule 18 (body)


State 93

   10 body: FOR $@1 '(' statement ';' condition ';' statement ')' • '{' body '}'

    '{'  shift, and go to state 96


State 94

   20 else: ELSE • $@5 '{' body '}'

    $default  reduce using rule 19 ($@5)

    $@5  go to state 97


State 95

   12 body: IF $@2 '(' condition ')' '{' body '}' else •

    $default  reduce using rule 12 (body)


State 96

   10 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' • body '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 98
    statement  go to state 24


State 97

   20 else: ELSE $@5 • '{' body '}'

    '{'  shift, and go to state 99


State 98

   10 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body • '}'
   14     | body • body

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 100

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 99

   20 else: ELSE $@5 '{' • body '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 101
    statement  go to state 24


State 100

   10 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body '}' •

    $default  reduce using rule 10 (body)


State 101

   14 body: body • body
   20 else: ELSE $@5 '{' body • '}'

    VOID     shift, and go to state 5
    PRINTFF  shift, and go to state 16
    SCANFF   shift, and go to state 17
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    FOR      shift, and go to state 18
    IF       shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 102

    datatype   go to state 22
    body       go to state 41
    statement  go to state 24


State 102

   20 else: ELSE $@5 '{' body '}' •

    $default  reduce using rule 20 (else)
